basePath: /api/v1
definitions:
  api.errorResponse:
    properties:
      error:
        type: string
    type: object
  api.messageResponse:
    properties:
      message:
        type: string
    type: object
  cart_domain.AddProductRequest:
    properties:
      product_id:
        type: string
      quantity:
        minimum: 1
        type: integer
    required:
    - product_id
    - quantity
    type: object
  cart_domain.CartProductResponse:
    properties:
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: string
      quantity:
        type: integer
      subtotal:
        type: string
    type: object
  cart_domain.CartProductsCountResponse:
    properties:
      count:
        type: integer
    type: object
  cart_domain.CartResponse:
    properties:
      products:
        items:
          $ref: '#/definitions/cart_domain.CartProductResponse'
        type: array
      shipping:
        type: string
      subtotal:
        type: string
      tax:
        type: string
      total:
        type: string
    type: object
  cart_domain.UpdateProductQuantityRequestBody:
    properties:
      quantity:
        minimum: 1
        type: integer
    required:
    - quantity
    type: object
  product_domain.ListProductCategoriesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/product_domain.ProductCategoryResponse'
        type: array
      meta:
        $ref: '#/definitions/product_domain.ListProductCategoriesResponseMeta'
    type: object
  product_domain.ListProductCategoriesResponseMeta:
    properties:
      page_count:
        type: integer
      page_id:
        type: integer
      page_size:
        type: integer
      total_count:
        type: integer
    type: object
  product_domain.ListProductsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/product_domain.ProductResponse'
        type: array
      meta:
        $ref: '#/definitions/product_domain.ListProductsResponseMeta'
    type: object
  product_domain.ListProductsResponseMeta:
    properties:
      page_count:
        type: integer
      page_id:
        type: integer
      page_size:
        type: integer
      total_count:
        type: integer
    type: object
  product_domain.ProductCategoryResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  product_domain.ProductResponse:
    properties:
      category:
        type: string
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: string
      seller:
        type: string
      stock_quantity:
        type: integer
    type: object
  user_domain.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  user_domain.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  user_domain.UserResponse:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
  title: Next Bazaar API
  version: 0.0.1
paths:
  /cart:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cart_domain.CartResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Get cart
      tags:
      - Cart
  /cart/{product_id}:
    delete:
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Delete cart product
      tags:
      - Cart
    put:
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      - description: Cart product object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/cart_domain.UpdateProductQuantityRequestBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.messageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Update cart product quantity
      tags:
      - Cart
  /cart/add-product:
    post:
      parameters:
      - description: Cart product object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/cart_domain.AddProductRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.messageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Add product to cart
      tags:
      - Cart
  /cart/count:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cart_domain.CartProductsCountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Get cart products count
      tags:
      - Cart
  /products:
    get:
      parameters:
      - in: query
        name: category_id
        type: string
      - in: query
        minimum: 1
        name: page_id
        required: true
        type: integer
      - in: query
        maximum: 100
        minimum: 1
        name: page_size
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product_domain.ListProductsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: List products
      tags:
      - Products
  /products/{id}:
    get:
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product_domain.ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Get product
      tags:
      - Products
  /products/categories:
    get:
      parameters:
      - in: query
        minimum: 1
        name: page_id
        required: true
        type: integer
      - in: query
        maximum: 100
        minimum: 1
        name: page_size
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product_domain.ListProductCategoriesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: List product categories
      tags:
      - Products
  /users/login:
    post:
      parameters:
      - description: User object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user_domain.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.messageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Login
      tags:
      - Users
  /users/logout:
    post:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.messageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Logout
      tags:
      - Users
  /users/me:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_domain.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Get current user
      tags:
      - Users
  /users/register:
    post:
      parameters:
      - description: User object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user_domain.RegisterRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.messageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Register user
      tags:
      - Users
swagger: "2.0"
