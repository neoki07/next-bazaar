basePath: /api/v1
definitions:
  api.createUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  api.errorResponse:
    properties:
      error:
        type: string
    type: object
  api.listProductsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.productResponse'
        type: array
      meta:
        $ref: '#/definitions/api.listProductsResponseMeta'
    type: object
  api.listProductsResponseMeta:
    properties:
      page_count:
        type: integer
      page_id:
        type: integer
      page_size:
        type: integer
      total_count:
        type: integer
    type: object
  api.loginUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  api.messageResponse:
    properties:
      message:
        type: string
    type: object
  api.productResponse:
    properties:
      category:
        type: string
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: string
      seller:
        type: string
      stock_quantity:
        type: integer
    type: object
  api.userResponse:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
  title: Next Bazaar API
  version: 0.0.1
paths:
  /products:
    get:
      parameters:
      - in: query
        minimum: 1
        name: page_id
        required: true
        type: integer
      - in: query
        maximum: 100
        minimum: 1
        name: page_size
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.listProductsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: List products
      tags:
      - products
  /products/{id}:
    get:
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.productResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Get product
      tags:
      - products
  /users:
    post:
      parameters:
      - description: User object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.createUserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.messageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Create user
      tags:
      - users
  /users/login:
    post:
      parameters:
      - description: User object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.messageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Login user
      tags:
      - users
  /users/logout:
    post:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.messageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Logout user
      tags:
      - users
  /users/me:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.userResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Get logged in user
      tags:
      - users
swagger: "2.0"
